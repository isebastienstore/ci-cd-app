@Library('my-shared-library@main') _

pipeline{

    agent any

    parameters{
        choice(name: 'action', choices: 'create\ndelete', description: 'Choose create/Destroy')
        string(name: 'aws_account_id', description: 'AWS Account ID', defaultValue: '211125402309')
        string(name: 'Region', description: 'Region of ECR', defaultValue: 'eu-west-3')
        string(name: 'ECR_REPO_NAME', description: 'name of the ECR', defaultValue: 'isebastienstore')
    }
    environment{

        ACCESS_KEY = credentials('AWS_ACCESS_KEY_ID')
        SECRET_KEY = credentials('AWS_SECRET_KEY_ID')
    }

    stages{
        stage('git Checkout'){
            when { expression {  params.action == 'create' } }
            steps{
                script{
                    gitCheckout()
                }
            }
        }

        stage('clean'){
            when { expression {  params.action == 'create' } }
            steps{
                script{
                    clean()
                }
            }
        }

        stage('Create EKS Cluster : Terraform'){
            when { expression {  params.action == 'create' } }
            steps{
                script{

                    dir('eks_module') {
                      bat """
                          terraform init
                          terraform plan -var "access_key=${ACCESS_KEY}" -var "secret_key=${SECRET_KEY}" -var "region=${params.Region}" --var-file=./config/terraform.tfvars
                          terraform apply -var "access_key=${ACCESS_KEY}" -var "secret_key=${SECRET_KEY}" -var "region=${params.Region}" --var-file=./config/terraform.tfvars --auto-approve
                      """
                  }
                }
            }
        }
    }
}
