@Library('my-shared-library@main') _

pipeline{

    agent any

    parameters{
        choice(name: 'action', choices: 'create\ndelete', description: 'Choose create/Destroy')
        string(name: 'aws_account_id', description: 'AWS Account ID', defaultValue: '211125402309')
        string(name: 'Region', description: 'Region of ECR', defaultValue: 'eu-west-3')
        string(name: 'ECR_REPO_NAME', description: 'name of the ECR', defaultValue: 'isebastienstore')
    }

    stages{
        stage('git Checkout'){
            when { expression {  params.action == 'create' } }
            steps{
                script{
                    gitCheckout(
                        branch: "main",
                        url: "https://github.com/isebastienstore/ci-cd-app.git"
                    )
                }
            }
        }

        stage('clean'){
            when { expression {  params.action == 'create' } }
            steps{
                script{
                    clean()
                }
            }
        }
        stage('checkstyle'){
            when { expression {  params.action == 'create' } }
            steps{
                script{
                    checkstyle()
                }
            }
        }

        stage('integration test maven'){
            when { expression {  params.action == 'create' } }
            steps{
                script{
                    mvnIntegrationTest()
                }
            }
        }

        stage('Static code analysis: Sonarqube'){
            when { expression {  params.action == 'create' } }
            steps{
                script{
                    def SonarQubecredentialsId = 'sonar-token'
                    statiCodeAnalysis(SonarQubecredentialsId)
                }
            }
        }

        stage('Maven Build : maven'){
            when { expression {  params.action == 'create' } }
            steps{
                script{
                    mvnBuild()
                }
            }
        }
    }
}
